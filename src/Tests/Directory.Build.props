<Project>

  <Import Project="..\Directory.Build.props" />

  <Import Project="..\Logging.props"/>

  <PropertyGroup>
    <NunitAssembly>com.unity.ext.nunit\net40\unity-custom\nunit.framework.dll</NunitAssembly>
    <TestingProjectName>$(MSBuildProjectName.Substring(0, $(MSBuildProjectName.IndexOf(`.Tests`))))</TestingProjectName>
    <TestingProjectPath>..\..\..\$(TestingProjectName)\$(TestingProjectName).csproj</TestingProjectPath>
  </PropertyGroup>

  <!-- Dependencies -->
  <ItemGroup>
    <Reference Include="$(NunitPath)" Private="false" />
    <PackageReference Include="NUnit.Analyzers" />
    <Reference Include="$(UnityScriptAssembliesPath)\UnityEngine.TestRunner.dll" Private="false" />
    <Reference Include="$(UnityPackageCachePath)\org.nuget.moq\netstandard2.1\Moq.dll" Private="false" />
  </ItemGroup>

  <ItemGroup>
    <!-- Test method names can definitely have underscores... -->
    <AssemblyAttribute Include="System.Diagnostics.CodeAnalysis.SuppressMessage">
      <_Parameter1>Naming</_Parameter1>
      <_Parameter2>CA1707:Identifiers should not contain underscores</_Parameter2>
    </AssemblyAttribute>

    <!--
    Apparently `Assert.Multiple` was only added in NUnit 3.7 (see release notes: https://docs.nunit.org/articles/nunit/release-notes/framework.html)
    but Unity is using NUnit 3.5 (as of Unity 6.0), and `NUnit.Analyzers` doesn't realize that?
    -->
    <AssemblyAttribute Include="System.Diagnostics.CodeAnalysis.SuppressMessage">
      <_Parameter1>Assertion</_Parameter1>
      <_Parameter2>NUnit2045:Use Assert.Multiple</_Parameter2>
    </AssemblyAttribute>
  </ItemGroup>

</Project>
