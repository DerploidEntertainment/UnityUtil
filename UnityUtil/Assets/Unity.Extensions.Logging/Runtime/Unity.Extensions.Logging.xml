<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Unity.Extensions.Logging</name>
    </assembly>
    <members>
        <member name="T:Unity.Extensions.Logging.LoggerConfigurationExtensions">
            <summary>
            Extends <see cref="T:Serilog.LoggerConfiguration"/> with methods to add Unity enricher, sink, and other configuration.
            </summary>
        </member>
        <member name="M:Unity.Extensions.Logging.LoggerConfigurationExtensions.AddUnity(Serilog.LoggerConfiguration,Serilog.Formatting.ITextFormatter,System.Boolean,System.Boolean,Serilog.Enrichers.Unity.UnityLogEnricherSettings,Serilog.Sinks.Unity.UnitySinkSettings)">
            <summary>
            Add the Unity Console to the Serilog pipeline.
            </summary>
            <param name="loggerConfiguration">Logger configuration.</param>
            <param name="textFormatter"><inheritdoc cref="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,Serilog.Sinks.Unity.UnitySinkSettings)" path="/param[@name='textFormatter']"/></param>
            <param name="selfLogIsUnityLogWarning">
            Whether Serilog's <see cref="T:Serilog.Debugging.SelfLog"/> is set to Unity's <see cref="M:UnityEngine.Debug.LogWarning(System.Object)"/>.
            Useful during development, but may generate noisy warnings if trying to destructure <see cref="T:UnityEngine.Object"/>s in <see cref="T:Serilog.Events.LogEvent"/>s.
            </param>
            <param name="setMinimumLevelFromUnityFilterLogType">
            Whether to set <see cref="P:Serilog.LoggerConfiguration.MinimumLevel"/> based on Unity's <see cref="P:UnityEngine.ILogger.filterLogType"/>.
            </param>
            <param name="unityLogEnricherSettings"><inheritdoc cref="M:Serilog.Enrichers.Unity.UnityLogEnricher.#ctor(Serilog.Enrichers.Unity.UnityLogEnricherSettings)" path="/param[@name='unityLogEnricherSettings']"/></param>
            <param name="unitySinkSettings">
            <inheritdoc cref="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,Serilog.Sinks.Unity.UnitySinkSettings)" path="/param[@name='unitySinkSettings']"/>
            By default, <see cref="P:Serilog.Sinks.Unity.UnitySinkSettings.UnityTagLogProperty"/> is set to <c>SourceContext</c> to reuse the type name set by <c>Serilog</c>
            as the Unity log <c>tag</c>.
            </param>
            <returns>Configuration object allowing method chaining.</returns>
        </member>
        <member name="M:Unity.Extensions.Logging.LoggerFactoryExtensions.CreateLogger``1(Microsoft.Extensions.Logging.ILoggerFactory,``0,Unity.Extensions.Logging.UnityObjectLoggerSettings)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="loggerFactory"><inheritdoc cref="T:Microsoft.Extensions.Logging.ILoggerFactory" path="/summary"/></param>
            <param name="context"><inheritdoc cref="M:Unity.Extensions.Logging.UnityObjectLogger`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,UnityEngine.Object,Unity.Extensions.Logging.UnityObjectLoggerSettings)" path="/param[@name='context']"/></param>
            <param name="unityObjectLoggerSettings"><inheritdoc cref="M:Unity.Extensions.Logging.UnityObjectLogger`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,UnityEngine.Object,Unity.Extensions.Logging.UnityObjectLoggerSettings)" path="/param[@name='unityObjectLoggerSettings']"/></param>
            <returns>
            A <see cref="T:Unity.Extensions.Logging.UnityObjectLogger`1"/> that adds <paramref name="context"/> as a scope property
            to all of its log messages for use by Unity-specific logging providers.
            </returns>
        </member>
        <member name="T:Unity.Extensions.Logging.UnityLogContext">
            <summary>
            Encapsulates a <see cref="T:UnityEngine.Object"/> instance to be used as the <c>context</c> parameter of a Unity log message.
            Allows custom Serilog destructuring policies to reference this type rather than, e.g., instances of all <see cref="T:UnityEngine.Object"/>-derived types.
            See Unity's <a href="https://docs.unity3d.com/ScriptReference/Debug.Log.html"><c>Debug.Log</c></a> docs for a description of the <c>context</c> parameter.
            </summary>
            <param name="context"><inheritdoc cref="P:Unity.Extensions.Logging.UnityLogContext.Context" path="/summary"/></param>
        </member>
        <member name="M:Unity.Extensions.Logging.UnityLogContext.#ctor(UnityEngine.Object)">
            <summary>
            Encapsulates a <see cref="T:UnityEngine.Object"/> instance to be used as the <c>context</c> parameter of a Unity log message.
            Allows custom Serilog destructuring policies to reference this type rather than, e.g., instances of all <see cref="T:UnityEngine.Object"/>-derived types.
            See Unity's <a href="https://docs.unity3d.com/ScriptReference/Debug.Log.html"><c>Debug.Log</c></a> docs for a description of the <c>context</c> parameter.
            </summary>
            <param name="context"><inheritdoc cref="P:Unity.Extensions.Logging.UnityLogContext.Context" path="/summary"/></param>
        </member>
        <member name="P:Unity.Extensions.Logging.UnityLogContext.Context">
            <summary>
            The encapsulated <see cref="T:UnityEngine.Object"/> instance used for the Unity log context.
            </summary>
        </member>
        <member name="T:Unity.Extensions.Logging.UnityLogContextDestructuringPolicy">
            <summary>
            Policy for destructuring <see cref="T:Unity.Extensions.Logging.UnityLogContext"/> instances.
            <para>
            Provides a mechanism for preserving <see cref="T:UnityEngine.Object"/> instances added to a <see cref="T:Serilog.Events.LogEvent"/>'s
            properties via <c>Microsoft.Extensions.Logging</c>'s <see cref="M:Microsoft.Extensions.Logging.LoggerExtensions.BeginScope(Microsoft.Extensions.Logging.ILogger,System.String,System.Object[])"/> method,
            so that the instance may be used as the <c>context</c> of a Unity <see cref="M:UnityEngine.Debug.LogWarning(System.Object,UnityEngine.Object)"/> message
            (without affecting the destructuring of other <see cref="T:UnityEngine.Object"/> log property values set by API consumers).
            </para>
            </summary>
        </member>
        <member name="M:Unity.Extensions.Logging.UnityLogContextDestructuringPolicy.TryDestructure(System.Object,Serilog.Core.ILogEventPropertyValueFactory,Serilog.Events.LogEventPropertyValue@)">
            <inheritdoc />
        </member>
        <member name="T:Unity.Extensions.Logging.UnityObjectLogger`1">
            <summary>
            An <see cref="T:Microsoft.Extensions.Logging.ILogger"/> that adds a <see cref="T:UnityEngine.Object"/> instance as a scope property
            to all of its log messages for use by Unity-specific logging providers.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Unity.Extensions.Logging.UnityObjectLogger`1.#ctor(Microsoft.Extensions.Logging.ILoggerFactory,UnityEngine.Object,Unity.Extensions.Logging.UnityObjectLoggerSettings)">
            <summary>
            Creates a new instance of <see cref="T:Unity.Extensions.Logging.UnityObjectLogger`1"/>.
            </summary>
            <param name="loggerFactory"><inheritdoc cref="T:Microsoft.Extensions.Logging.ILoggerFactory" path="/summary"/></param>
            <param name="context">The <see cref="T:UnityEngine.Object"/> instance to add as a scope property to all log messages for use by Unity-specific logging providers.</param>
            <param name="unityObjectLoggerSettings"><inheritdoc cref="T:Unity.Extensions.Logging.UnityObjectLoggerSettings" path="/summary"/></param>
        </member>
        <member name="M:Unity.Extensions.Logging.UnityObjectLogger`1.BeginScope``1(``0)">
            <inheritdoc/>
        </member>
        <member name="M:Unity.Extensions.Logging.UnityObjectLogger`1.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <inheritdoc/>
        </member>
        <member name="M:Unity.Extensions.Logging.UnityObjectLogger`1.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <inheritdoc/>
        </member>
        <member name="T:Unity.Extensions.Logging.UnityObjectLoggerSettings">
            <summary>
            Settings for a <see cref="T:Unity.Extensions.Logging.UnityObjectLogger`1"/> instance.
            </summary>
        </member>
        <member name="P:Unity.Extensions.Logging.UnityObjectLoggerSettings.UnityContextLogProperty">
            <summary>
            Name of the <see cref="T:Serilog.Events.LogEventProperty"/> that holds the logging <see cref="T:UnityEngine.Object"/> instance
            for use as <c>context</c> by Unity's <see cref="M:UnityEngine.Debug.Log(System.Object,UnityEngine.Object)"/> method.
            If <see langword="null"/>, then no <c>context</c> will be added to log messages.
            </summary>
        </member>
        <member name="P:Unity.Extensions.Logging.UnityObjectLoggerSettings.HierarchicalNameLogProperty">
            <summary>
            Name of the <see cref="T:Serilog.Events.LogEventProperty"/> that holds the logging <see cref="T:UnityEngine.Object"/> instance's hierarchical name.
            If <see langword="null"/>, then no hierarchical name is calculated or added to the log message.
            <para>
            </para>
            For <see cref="T:UnityEngine.GameObject"/> and <see cref="T:UnityEngine.Component"/>-derived instances, the hierarchical name is
            the name of the object's transform and all parent transforms, separated by <see cref="P:Unity.Extensions.Logging.UnityObjectLoggerSettings.ParentNameSeparator"/>.
            For all other <see cref="T:UnityEngine.Object"/> instances, the hierarchical name is simply the object's <see cref="P:UnityEngine.Object.name"/>.
            </summary>
        </member>
        <member name="P:Unity.Extensions.Logging.UnityObjectLoggerSettings.HasStaticHierarchy">
            <summary>
            Whether the logging <see cref="T:UnityEngine.Object"/> instance's hierarchy is static.
            I.e., for <see cref="T:UnityEngine.GameObject"/> and <see cref="T:UnityEngine.Component"/>-derived instances, whether its parent transforms ever change.
            If an object's hierarchy is static, then its hierarchical name is cached for better logging performance.
            </summary>
        </member>
        <member name="P:Unity.Extensions.Logging.UnityObjectLoggerSettings.ParentNameSeparator">
            <summary>
            For logging <see cref="T:UnityEngine.Object"/>s that are <see cref="T:UnityEngine.GameObject"/>s or derived from <see cref="T:UnityEngine.Component"/>,
            the object's transform and all of its parent transforms will be separated by this string.
            Prefer single-character separators to keep rendered log messages small.
            </summary>
        </member>
    </members>
</doc>
