<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Serilog.Sinks.Unity</name>
    </assembly>
    <members>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
                Reserved to be used by the compiler for tracking metadata.
                This class should not be used by developers in source code.
            </summary>
            <remarks>
                This definition is provided by the <i>IsExternalInit</i> NuGet package (https://www.nuget.org/packages/IsExternalInit).
                Please see https://github.com/manuelroemer/IsExternalInit for more information.
            </remarks>
        </member>
        <member name="T:Serilog.Sinks.Unity.LoggerSinkConfigurationExtensions">
            <summary>
            Extends <see cref="T:Serilog.Configuration.LoggerSinkConfiguration"/> with Unity sinks.
            </summary>
        </member>
        <member name="M:Serilog.Sinks.Unity.LoggerSinkConfigurationExtensions.Unity(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            Write log events to the Unity Console.
            </summary>
            <param name="loggerSinkConfiguration">Logger sink configuration.</param>
            <param name="textFormatter"><inheritdoc cref="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings)" path="/param[@name='textFormatter']"/></param>
            <param name="logger"><inheritdoc cref="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings)" path="/param[@name='logger']"/></param>
            <param name="unitySinkSettings"><inheritdoc cref="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings)" path="/param[@name='unitySinkSettings']"/></param>
            <param name="restrictedToMinimumLevel"><inheritdoc cref="M:Serilog.Configuration.LoggerSinkConfiguration.Sink(Serilog.Core.ILogEventSink,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)" path="/param[@name='restrictedToMinimumLevel']"/></param>
            <param name="levelSwitch"><inheritdoc cref="M:Serilog.Configuration.LoggerSinkConfiguration.Sink(Serilog.Core.ILogEventSink,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)" path="/param[@name='levelSwitch']"/></param>
            <returns>Configuration object allowing method chaining.</returns>
        </member>
        <member name="M:Serilog.Sinks.Unity.LoggerSinkConfigurationExtensions.Unity(Serilog.Configuration.LoggerSinkConfiguration,System.String,System.IFormatProvider,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)">
            <summary>
            <inheritdoc cref="M:Serilog.Sinks.Unity.LoggerSinkConfigurationExtensions.Unity(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)" path="/summary"/>
            </summary>
            <param name="loggerSinkConfiguration">Logger sink configuration.</param>
            <param name="outputTemplate"><inheritdoc cref="M:Serilog.Formatting.Display.MessageTemplateTextFormatter.#ctor(System.String,System.IFormatProvider)" path="/param[@name='outputTemplate']"/></param>
            <param name="formatProvider"><inheritdoc cref="M:Serilog.Formatting.Display.MessageTemplateTextFormatter.#ctor(System.String,System.IFormatProvider)" path="/param[@name='formatProvider']"/></param>
            <param name="logger"><inheritdoc cref="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings)" path="/param[@name='logger']"/></param>
            <param name="unitySinkSettings"><inheritdoc cref="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings)" path="/param[@name='unitySinkSettings']"/></param>
            <param name="restrictedToMinimumLevel"><inheritdoc cref="M:Serilog.Configuration.LoggerSinkConfiguration.Sink(Serilog.Core.ILogEventSink,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)" path="/param[@name='restrictedToMinimumLevel']"/></param>
            <param name="levelSwitch"><inheritdoc cref="M:Serilog.Configuration.LoggerSinkConfiguration.Sink(Serilog.Core.ILogEventSink,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)" path="/param[@name='levelSwitch']"/></param>
            <returns>
            <inheritdoc cref="M:Serilog.Sinks.Unity.LoggerSinkConfigurationExtensions.Unity(Serilog.Configuration.LoggerSinkConfiguration,Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings,Serilog.Events.LogEventLevel,Serilog.Core.LoggingLevelSwitch)" path="/returns"/>
            </returns>
        </member>
        <member name="T:Serilog.Sinks.Unity.UnitySink">
            <summary>
            Writes log events to the Unity Console.
            </summary>
            <param name="textFormatter">
            A formatter, such as <see cref="T:Serilog.Formatting.Json.JsonFormatter"/>, to convert the log events into text for the Unity Console.
            </param>
            <param name="logger">
            The Unity <see cref="T:UnityEngine.ILogger"/> backing this sink.
            If <see langword="null"/> then the default <see cref="P:UnityEngine.Debug.unityLogger"/> will be used.
            </param>
            <param name="unitySinkSettings"><inheritdoc cref="T:Serilog.Sinks.Unity.UnitySinkSettings" path="/summary"/></param>
        </member>
        <member name="M:Serilog.Sinks.Unity.UnitySink.#ctor(Serilog.Formatting.ITextFormatter,UnityEngine.ILogger,Serilog.Sinks.Unity.UnitySinkSettings)">
            <summary>
            Writes log events to the Unity Console.
            </summary>
            <param name="textFormatter">
            A formatter, such as <see cref="T:Serilog.Formatting.Json.JsonFormatter"/>, to convert the log events into text for the Unity Console.
            </param>
            <param name="logger">
            The Unity <see cref="T:UnityEngine.ILogger"/> backing this sink.
            If <see langword="null"/> then the default <see cref="P:UnityEngine.Debug.unityLogger"/> will be used.
            </param>
            <param name="unitySinkSettings"><inheritdoc cref="T:Serilog.Sinks.Unity.UnitySinkSettings" path="/summary"/></param>
        </member>
        <member name="M:Serilog.Sinks.Unity.UnitySink.Emit(Serilog.Events.LogEvent)">
            <inheritdoc/>
        </member>
        <member name="T:Serilog.Sinks.Unity.UnitySinkSettings">
            <summary>
            Settings for a <see cref="T:Serilog.Sinks.Unity.UnitySink"/>.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.Unity.UnitySinkSettings.UnityTagLogProperty">
            <summary>
            Name of the <see cref="T:Serilog.Events.LogEventProperty"/> storing the Unity log's <c>tag</c>, if present.
            This is set to <see cref="F:Serilog.Core.Constants.SourceContextPropertyName"/> by default, to reuse the type name set by <c>Serilog</c> as the Unity log <c>tag</c>.
            If <see langword="null"/>, then <see cref="T:Serilog.Sinks.Unity.UnitySink"/> will not check the <see cref="P:Serilog.Events.LogEvent.Properties"/> for a tag.
            This log property can be removed from <see cref="T:Serilog.Events.LogEvent"/>s by setting <see cref="P:Serilog.Sinks.Unity.UnitySinkSettings.RemoveUnityTagLogPropertyIfPresent"/> to <see langword="true"/>
            to avoid duplicating its value in the log message (default).
            See Unity's <a href="https://docs.unity3d.com/ScriptReference/Logger.Log.html"><c>Logger.Log</c></a> docs for a description of the <c>tag</c> parameter.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.Unity.UnitySinkSettings.UnityContextLogProperty">
            <summary>
            Name of the <see cref="T:Serilog.Events.LogEventProperty"/> storing the Unity log's <c>context</c>, if present.
            If <see langword="null"/>, then <see cref="T:Serilog.Sinks.Unity.UnitySink"/> will not check the <see cref="P:Serilog.Events.LogEvent.Properties"/> for a context.
            This property can be removed from <see cref="T:Serilog.Events.LogEvent"/>s by setting <see cref="P:Serilog.Sinks.Unity.UnitySinkSettings.RemoveUnityContextLogPropertyIfPresent"/> to <see langword="true"/>
            to avoid trying to format <see cref="T:UnityEngine.Object"/> instances stored in the context property (default).
            See Unity's <a href="https://docs.unity3d.com/ScriptReference/Debug.Log.html"><c>Debug.Log</c></a> docs for a description of the <c>context</c> parameter.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.Unity.UnitySinkSettings.RemoveUnityTagLogPropertyIfPresent">
            <summary>
            Whether the <see cref="T:Serilog.Events.LogEventProperty"/> storing the Unity log's tag (the property with the name given by <see cref="P:Serilog.Sinks.Unity.UnitySinkSettings.UnityTagLogProperty"/>)
            will be removed from <see cref="T:Serilog.Events.LogEvent"/>s.
            Set to <see langword="true"/> to avoid duplicating that property's value between the log's tag in the Unity Console and the formatted log message itself.
            See Unity's <a href="https://docs.unity3d.com/ScriptReference/Logger.Log.html"><c>Logger.Log</c></a> docs for a description of the <c>tag</c> parameter.
            </summary>
        </member>
        <member name="P:Serilog.Sinks.Unity.UnitySinkSettings.RemoveUnityContextLogPropertyIfPresent">
            <summary>
            Whether the <see cref="T:Serilog.Events.LogEventProperty"/> storing the Unity log's context (the property with the name given by <see cref="P:Serilog.Sinks.Unity.UnitySinkSettings.UnityContextLogProperty"/>)
            will be removed from <see cref="T:Serilog.Events.LogEvent"/>s.
            Set to <see langword="true"/> to avoid trying to format <see cref="T:UnityEngine.Object"/> instances stored in the context property.
            See Unity's <a href="https://docs.unity3d.com/ScriptReference/Debug.Log.html"><c>Debug.Log</c></a> docs for a description of the <c>context</c> parameter.
            </summary>
        </member>
    </members>
</doc>
